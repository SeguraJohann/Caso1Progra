// <auto-generated />
using System;
using CasoPractico1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasoPractico1.Migrations
{
    [DbContext(typeof(CasoContext))]
    [Migration("20250228213332_Rol_Eliminado")]
    partial class Rol_Eliminado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CasoPractico1.Models.Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_ruta")
                        .HasColumnType("int");

                    b.Property<int>("ID_usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ID_ruta");

                    b.HasIndex("ID_usuario");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("CasoPractico1.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("horafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horainicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("CasoPractico1.Models.Parada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paradas");
                });

            modelBuilder.Entity("CasoPractico1.Models.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspaciosDisponibles")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParadaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HorarioId");

                    b.HasIndex("ParadaId");

                    b.HasIndex("VehiculoId");

                    b.HasIndex("usuarioRegistroId");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("CasoPractico1.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CasoPractico1.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadPasajeros")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("CasoPractico1.Models.Boleto", b =>
                {
                    b.HasOne("CasoPractico1.Models.Ruta", "Rutas")
                        .WithMany("Boletos")
                        .HasForeignKey("ID_ruta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasoPractico1.Models.Usuario", "Usuarios")
                        .WithMany("Boletos")
                        .HasForeignKey("ID_usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rutas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CasoPractico1.Models.Ruta", b =>
                {
                    b.HasOne("CasoPractico1.Models.Horario", "Horarios")
                        .WithMany("Rutas")
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasoPractico1.Models.Parada", "Paradas")
                        .WithMany("Rutas")
                        .HasForeignKey("ParadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasoPractico1.Models.Vehiculo", "Vehiculos")
                        .WithMany("Rutas")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasoPractico1.Models.Usuario", "Usuarios")
                        .WithMany("Rutas")
                        .HasForeignKey("usuarioRegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horarios");

                    b.Navigation("Paradas");

                    b.Navigation("Usuarios");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("CasoPractico1.Models.Vehiculo", b =>
                {
                    b.HasOne("CasoPractico1.Models.Usuario", "Usuarios")
                        .WithMany("Vehiculos")
                        .HasForeignKey("UsuarioRegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CasoPractico1.Models.Horario", b =>
                {
                    b.Navigation("Rutas");
                });

            modelBuilder.Entity("CasoPractico1.Models.Parada", b =>
                {
                    b.Navigation("Rutas");
                });

            modelBuilder.Entity("CasoPractico1.Models.Ruta", b =>
                {
                    b.Navigation("Boletos");
                });

            modelBuilder.Entity("CasoPractico1.Models.Usuario", b =>
                {
                    b.Navigation("Boletos");

                    b.Navigation("Rutas");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("CasoPractico1.Models.Vehiculo", b =>
                {
                    b.Navigation("Rutas");
                });
#pragma warning restore 612, 618
        }
    }
}
